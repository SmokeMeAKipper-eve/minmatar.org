---
import type { spaces } from '@dtypes/layout_components'
interface Props {
    gap?:               spaces;
    centered?:          boolean;
    [propName: string]: any;
}

const {
    gap = 'var(--space-s)',
    centered = false,
    ...attributes
} = Astro.props;

const regExp = /\(([^)]+)\)/
const matches = regExp.exec(gap)
const gap_token = (matches ? matches[1] : gap)

delete attributes.class
---

<div class:list={['flex-block', Astro.props.class, `gap-${gap_token}`]} {...attributes} data-mod={ centered ? 'centered' : ''}>
    <slot />
</div>

<style lang="scss" is:global>
    .flex-block {        
        display: flex;
        flex-direction: column;
        justify-content: flex-start;

        &[data-mod="centered"] {
            align-items: center;
        }

        /*&:only-child {
            block-size: 100%;
        }*/

        &.gap-0 {
            > * + * {
                margin-block-start: 0;
            }
        }
                
        &.gap-1px {
            > * + * {
                margin-block-start: 1px;
            }
        }

        &.gap-2px {
            > * + * {
                margin-block-start: 2px;
            }
        }

        &.gap---component-block-gap {
            > * + * {
                margin-block-start: var(--component-block-gap);
            }
        }

        &.gap---space-3xs {
            > * + * {
                margin-block-start: var(--space-3xs);
            }
        }

        &.gap---space-2xs {
            > * + * {
                margin-block-start: var(--space-2xs);
            }
        }

        &.gap---space-xs {
            > * + * {
                margin-block-start: var(--space-xs);
            }
        }

        &.gap---space-s {
            > * + * {
                margin-block-start: var(--space-s);
            }
        }

        &.gap---space-m {
            > * + * {
                margin-block-start: var(--space-m);
            }
        }

        &.gap---space-l {
            > * + * {
                margin-block-start: var(--space-l);
            }
        }

        &.gap---space-xl {
            > * + * {
                margin-block-start: var(--space-xl);
            }
        }

        &.gap---space-2xl {
            > * + * {
                margin-block-start: var(--space-2xl);
            }
        }

        &.gap---space-3xl {
            > * + * {
                margin-block-start: var(--space-3xl);
            }
        }

        &.gap---space-3xs-2xs {
            > * + * {
                margin-block-start: var(--space-3xs-2xs);
            }
        }

        &.gap---space-2xs-xs {
            > * + * {
                margin-block-start: var(--space-2xs-xs);
            }
        }

        &.gap---space-xs-s {
            > * + * {
                margin-block-start: var(--space-xs-s);
            }
        }

        &.gap---space-s-m {
            > * + * {
                margin-block-start: var(--space-s-m);
            }
        }

        &.gap---space-m-l {
            > * + * {
                margin-block-start: var(--space-m-l);
            }
        }

        &.gap---space-l-xl {
            > * + * {
                margin-block-start: var(--space-l-xl);
            }
        }

        &.gap---space-xl-2xl {
            > * + * {
                margin-block-start: var(--space-xl-2xl);
            }
        }

        &.gap---space-2xl-3xl {
            > * + * {
                margin-block-start: var(--space-2xl-3xl);
            }
        }

        &.gap---space-s-l {
            > * + * {
                margin-block-start: var(--space-s-l);
            }
        }

        > * {
            margin-block: 0;
        }

        > .push-bottom {
            margin-block-end: auto;
        }
    }
</style>