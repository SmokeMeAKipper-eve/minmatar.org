---
import { getLangFromUrl, useTranslations, useTranslatedPath } from '@i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

const primary_character = Astro.cookies.has('primary_pilot')

import { is_prod_mode } from '@helpers/env'

import Flexblock from '@components/compositions/Flexblock.astro';

import NeocomButton from '@components/blocks/NeocomButton.astro';

import UserAuth from '@components/UserAuth.astro';

import ShipTreeEvEIcon from '@components/icons/ShipTreeEvEIcon.astro';
import FleetEvEIcon from '@components/icons/FleetEvEIcon.astro';
import IntelEvEIcon from '@components/icons/IntelEvEIcon.astro';
import AssetsEvEIcon from '@components/icons/AssetsEvEIcon.astro';
import MarketEvEIcon from '@components/icons/MarketEvEIcon.astro';
import ZkillboardEvEIcon from '@components/icons/ZkillboardEvEIcon.astro';
import AllianceEvEIcon from '@components/icons/AllianceEvEIcon.astro';
import FleetLogo from '@components/icons/FleetLogo.astro';
import TutorialIcon from '@components/icons/TutorialIcon.astro';

const page = Astro.url.pathname
---

<header class="[ neocom ] [ transparency ]">
    <nav class="[ flex-block-l ]">
        <Flexblock gap="0">
            <NeocomButton href={translatePath('/')} overlay={true}>
                <FleetLogo square={true} />
            </NeocomButton>
            <UserAuth active={page.startsWith(translatePath('/account/'))} />
        </Flexblock>
        <NeocomButton active={page.startsWith(translatePath('/alliance/'))} title={t('neocom.alliance')} href={translatePath('/alliance/')}>
            <AllianceEvEIcon />
        </NeocomButton>
        {!is_prod_mode() &&
            <NeocomButton active={page.startsWith(translatePath('/ships/'))} title={t('neocom.ships')} href={translatePath('/ships/')}>
                <ShipTreeEvEIcon />
            </NeocomButton>
        }
        {!is_prod_mode() &&
            <NeocomButton active={page.startsWith(translatePath('/fleets/'))} title={t('neocom.fleets')} href={translatePath('/fleets/')}>
                <FleetEvEIcon />
            </NeocomButton>
        }
        {!is_prod_mode() &&
            <NeocomButton active={page.startsWith(translatePath('/market/'))} title={t('neocom.market')} href={translatePath('/market/')}>
                <MarketEvEIcon />
            </NeocomButton>
        }
        <NeocomButton active={page.startsWith(translatePath('/intel/'))} title={t('neocom.intel')} href={translatePath('/intel/')}>
            <IntelEvEIcon />
        </NeocomButton>
        {primary_character &&
            <NeocomButton active={page.startsWith(translatePath('/character/assets/user/'))} title={t('neocom.assets')} href={translatePath('/character/assets/user/')}>
                <AssetsEvEIcon />
            </NeocomButton>
        }
        <NeocomButton
            title={t('neocom.help')}
            x-data={`{
                show_help_modal() {
                    show_modal({
                        partial: '${translatePath('/partials/help_modal_component/')}',
                    })
                }
            }`}
            x-on:click="show_help_modal()"
        >
            <TutorialIcon />
        </NeocomButton>
        <NeocomButton title={t('neocom.zkillboard')} href="https://zkillboard.com/alliance/99011978" external={true}>
            <ZkillboardEvEIcon />
        </NeocomButton>
    </nav>
    <Flexblock gap="0" x-data="neocom_clock()" x-init="init()">
        <div class="[ loader-wrapper ]">
            <span class="loader active"></span>
        </div>
        <time class="[ clock ]" x-text="getTime()"></time>
    </Flexblock>
</header>

<style lang="scss">
    .neocom {
        position: fixed;
        z-index: var(--neocom-z-index);
        top: 0;
        left: 0;
        height: 100%;
        max-width: 48px;
        overflow-y: auto;
        display: flex;
        justify-content: space-between;
        flex-direction: column;

        nav {
            flex-shrink: 1;
            overflow: auto;
        }
    }

    .clock {
        text-align: center;
        color: var(--highlight);
        width: 48px;
        font-size: var(--step--2);
        background-color: rgba(0, 0, 0, 0.6);
    }

    .flex-block-l {
        --flex-block--space: var(--space-2xs);
    }

    .loader-wrapper {
        border-top: solid 1px var(--border-color);
        width: 48px;
        height: 48px;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: rgba(0, 0, 0, 0.3);
        flex-shrink: 0;
    }

    .loader {
        z-index: var(--neocom-z-index);
        width: 24px;
        height: 24px;
        border: 2px solid rgba(255, 255, 255, 0.3);
        border-radius: 50%;
        display: inline-block;
        box-sizing: border-box;
        animation: rotation 1s linear infinite;

        &.htmx-request,
        &.active {
            border-bottom-color: rgba(255, 255, 255, 0.75);
        }
    }

    @keyframes rotation {
        0% {
            transform: rotate(0deg);
        }
        100% {
            transform: rotate(360deg);
        }
    } 
</style>