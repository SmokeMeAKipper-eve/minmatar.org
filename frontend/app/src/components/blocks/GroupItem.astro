---
import { getLangFromUrl, useTranslations, useTranslatedPath } from '@i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

import type { Group } from '@dtypes/api.minmatar.org'
import type { Alert, GroupItemType } from '@dtypes/layout_components'
import { query_string, is_valid_http_url } from '@helpers/string';

interface Props {
    group:  Group;
    type:   GroupItemType,
    alert?: Alert | false;
}

const {
    group,
    type,
    alert = false,
} = Astro.props

import { get_app_url } from '@helpers/env'
const GROUP_ITEM_PARTIAL_URL = `${get_app_url()}/partials/group_item_component/`

import FixedFluid from '@components/compositions/FixedFluid.astro';
import Flexblock from '@components/compositions/Flexblock.astro';
import FlexInline from '@components/compositions/FlexInline.astro';

import Button from '@components/blocks/Button.astro';
import VerticalCenter from '@components/blocks/VerticalCenter.astro';
import Tag from '@components/blocks/Tag.astro';

import AugmentationEvEIcon from '@components/icons/AugmentationEvEIcon.astro';
import GroupsEvEIcon from '@components/icons/GroupsEvEIcon.astro';

console.log('===========')
console.log(type)
---

<FixedFluid
    width='64px'
    class="[ group-item ]"
    id={`group-item-${group.id}`}
    x-data={`{
        group_item_init() {
            ${alert !== false ? `show_alert_dialog(${JSON.stringify(alert)})` : ''}
        }
    }`}
    x-init="group_item_init()"
>
    <picture class:list={{ bordered: !group?.image_url }}>
        {!group?.image_url ?
            (type === 'team' ? <AugmentationEvEIcon /> : <GroupsEvEIcon /> )
            :
            <img src={group.image_url} width="64" height="64" alt={`${group.name} ${type === 'team' ? t('team_logo') : t('group_logo')}`} />
        }
    </picture>
    <FlexInline justification='space-between'>
        <VerticalCenter>
            <Flexblock gap='0' class="[ w-full ]">
                <span class="text-[var(--highlight)]">
                    {group.name}
                </span>
                {is_valid_http_url(group.description) ?
                    <small>
                        <a href={group.description} target="_blank">
                            {type === 'team' ? t('view_team_description') : t('view_group_description')}
                        </a>
                    </small>
                    :
                    <small>{group.description}</small>
                }
            </Flexblock>
        </VerticalCenter>
        <VerticalCenter>
            {group?.status == 'available' &&
                <Button
                    type="button"
                    size='sm'
                    color='green'
                    x-bind:disabled="disabled"
                    x-data={`{
                        disabled: false,
                        show_join_request_dialog() {
                            this.disabled = true
                            
                            show_confirm_dialog({
                                title: '${type === 'team' ? t('team_join_request_dialog_title') : t('group_join_request_dialog_title')}',
                                partial: '${translatePath('/partials/dialog_with_group/')}?${query_string({
                                    name: group.name,
                                    description: group.description,
                                    image_url: JSON.stringify(group.image_url),
                                    type: type,
                                    message: (type === 'team' ? t('team_join_request_dialog_text') : t('group_join_request_dialog_text'))
                                })}',
                                return_on_accept: ${group.id},
                                hx: {
                                    method: 'post',
                                    url: '${GROUP_ITEM_PARTIAL_URL}?${query_string({
                                        id: group.id.toString(),
                                        type: type,
                                    })}',
                                    target: '#group-item-${group.id}',
                                    swap: 'outerHTML transition:true'
                                }
                            }).then( (group_id) => { this.disabled = !!group_id } )
                        }
                    }`}
                    x-on:click="show_join_request_dialog()"
                    type="button"
                >
                    {t('join')}
                </Button>
            }
            {group?.status == 'requested' &&
                <Tag color='alliance-blue' text={t('pending')} />
            }
            {group?.status == 'confirmed' &&
                <Tag color='green' text={t('joined')} />
            }
        </VerticalCenter>
    </FlexInline>
</FixedFluid>

<style lang="scss">
    .group-item {
        picture {
            display: flex;
            justify-content: center;
            align-items: center;
            aspect-ratio: 1/1;

            &.bordered {
                border: solid 1px var(--border-color)
            }
        }

        a {
            display: inline-block;
            color: var(--fleet-yellow);

            > .flex-inline {
                max-width: fit-content;
            }
        }
    }
</style>