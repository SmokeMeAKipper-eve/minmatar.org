---
import { getLangFromUrl, useTranslations } from '@i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

import type { Alert, GroupItemUI, GroupItemType } from '@dtypes/layout_components'
import { is_valid_http_url } from '@helpers/string';

interface Props {
    group:  GroupItemUI;
    type:   GroupItemType,
    alert?: Alert | false;
}

const {
    group,
    type,
    alert = false,
} = Astro.props

import { get_app_url } from '@helpers/env'
const GROUP_ITEM_PARTIAL_URL = `${get_app_url()}/partials/group_item_component/`

import FixedFluid from '@components/compositions/FixedFluid.astro';
import Flexblock from '@components/compositions/Flexblock.astro';
import FlexInline from '@components/compositions/FlexInline.astro';

import GroupStatus from '@components/blocks/GroupStatus.astro';
import VerticalCenter from '@components/blocks/VerticalCenter.astro';

import AugmentationEvEIcon from '@components/icons/AugmentationEvEIcon.astro';
import GroupsEvEIcon from '@components/icons/GroupsEvEIcon.astro';

const LOGO_TEXT = {
    'team': t('team_logo'),
    'group': t('group_logo'),
}

const DESCRIPTION_TEXT = {
    'team': t('view_team_description'),
    'group': t('view_group_description'),
}
---

<FixedFluid
    width='64px'
    class="[ group-item ]"
    id={`group-item-${group.id}`}
    x-data={`{
        group_item_init() {
            ${alert !== false ? `show_alert_dialog(${JSON.stringify(alert)})` : ''}
        }
    }`}
    x-init="group_item_init()"
>
    {!group?.image_url ?
        <picture class="bordered">
            {type === 'team' &&
                <AugmentationEvEIcon />
            }
            {type === 'group' &&
                <GroupsEvEIcon />
            }
        </picture>
        :
        <picture>
            <img src={group.image_url} width="64" height="64" alt={`${group.name} ${LOGO_TEXT[type]}`} />
        </picture>
    }
    <FlexInline justification='space-between'>
        <VerticalCenter>
            <Flexblock gap='0' class="[ w-full ]">
                <span class="text-[var(--highlight)]">
                    {group.name}
                </span>
                <slot>
                    {is_valid_http_url(group.description) ?
                        <small>
                            <a href={group.description} target="_blank">
                                {DESCRIPTION_TEXT[type]}
                            </a>
                        </small>
                        :
                        <small>{group.description}</small>
                    }
                </slot>
            </Flexblock>
        </VerticalCenter>
        <VerticalCenter>
            <GroupStatus
                group={group}
                group_type={type}
            />
        </VerticalCenter>
    </FlexInline>
</FixedFluid>

<style lang="scss">
    .group-item {
        picture {
            display: flex;
            justify-content: center;
            align-items: center;
            aspect-ratio: 1/1;

            &.bordered {
                border: solid 1px var(--border-color)
            }
        }

        a {
            display: inline-block;
            color: var(--fleet-yellow);

            > .flex-inline {
                max-width: fit-content;
            }
        }
    }
</style>