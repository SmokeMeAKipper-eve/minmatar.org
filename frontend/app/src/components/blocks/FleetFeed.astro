---
import { getLangFromUrl, useTranslations, useTranslatedPath } from '@i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

import type { User } from '@dtypes/jwt'
import * as jose from 'jose'

const auth_token = Astro.cookies.has('auth_token') ? Astro.cookies.get('auth_token').value : false
const user:User | false = auth_token ? jose.decodeJwt(auth_token) as User : false

if (!user)
    return HTTP_404_Not_Found()

import { prod_error_messages } from '@helpers/env'
import type { FleetItem } from '@dtypes/layout_components'
import { fetch_fleets } from '@helpers/fetching/fleets'

let fetch_fleets_error:string | false = false
let fleets:FleetItem[] = []

try {
    fleets = await fetch_fleets(auth_token as string)
    fleets = fleets.filter((i) => (new Date(i.start_time).getTime() < new Date(Date.now() + 24 * 60 * 60 * 1000).getTime()))
    fleets.sort((a, b) => new Date(a.start_time).getTime() - new Date(b.start_time).getTime())
} catch (error) {
    fetch_fleets_error = prod_error_messages() ? t('fetch_fleets_error') : error.message
}

const FLEET_FEED_PARTIAL_URL = `${translatePath('/partials/fleet_feed_component')}`

import FeedSwiper from '@components/blocks/FeedSwiper.astro';
import FleetFeedItem from '@components/blocks/FleetFeedItem.astro';
---

<div
    class="[ fleet-feed swiper ][ pr-[var(--space-s)] animate-fade-in-up !hidden 2xl:!block ]"
    hx-get={FLEET_FEED_PARTIAL_URL}
    hx-trigger="load delay:3600s"
    hx-swap="outerHTML transition:true"
>
    <FeedSwiper>
        {fleets.map( (fleet) =>
            <div class="swiper-slide">
                <FleetFeedItem fleet={fleet} />
            </div>
        )}
    </FeedSwiper>
</div>

<style lang="scss">
    .fleet-feed {
        width: min(100%, 700px);
        position: fixed;
        max-height: calc(2 * 64px);
        bottom: var(--space-l);
        right: var(--space-xl);
    }

    .swiper-slider {
        max-height: 64px;
        width: min(100%, 700px);
    }
</style>