---
import { getLangFromUrl, useTranslations, useTranslatedPath } from '@i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

interface Props {
    element?:           string;
    partial?:           string;
    height?:            string;
    width?:             string;
    [propName: string]: any;
}

const {
    element = 'span',
    partial,
    height = 'auto',
    width = 'auto',
    ...attributes
} = Astro.props

const Element = element
---

{!partial ?
    <Element {...attributes}>
        <slot />
    </Element>
    :
    <Element
        data-tippy-content={`
            <div hx-on::after-request="
                const popper = this.closest('[data-tippy-root]')
                const instance = popper._tippy
                instance.popperInstance.update()
                popper.classList.remove('visually-hidden')
            ">
                <span
                    hx-on::before-request="this.closest('[data-tippy-root]').classList.add('visually-hidden')"
                    hx-trigger="intersect"
                    hx-get='${translatePath(partial)}'
                    hx-swap="outerHTML transition:false"
                >
                    ${t('loading')}
                </span>
            </div>
        `}
        data-tippy-allowhtml='true'
        {...attributes}
    >
        <slot />
    </Element>
}