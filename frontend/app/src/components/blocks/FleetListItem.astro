---
import { getLangFromUrl, useTranslations, useTranslatedPath } from '@i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

import type { FleetItem } from '@dtypes/layout_components';

import Flexblock from '@components/compositions/Flexblock.astro';
import Button from '@components/blocks/Button.astro';
import ThumbCard from '@components/blocks/ThumbCard.astro';
import Countdown from './Countdown.astro';
import MagnifierIcon from '@components/icons/buttons/MagnifierIcon.astro';
import VerticalCenter from './VerticalCenter.astro';
import TextGroup from './TextGroup.astro';

interface Props {
    fleet: FleetItem;
    history?: boolean;
    [propName: string]: any;
}

const {
    fleet,
    history = false,
    ...attributes
} = Astro.props

import { get_player_icon } from '@helpers/eve_image_server'

const eve_time = new Date(fleet.start_time);
const countdown_time = `${fleet.start_time} UTC`.replace('T', ' ');

const eve_time_text = eve_time.toLocaleDateString(lang, JSON.parse(import.meta.env.DATETIME_FORMAT))
---

<ThumbCard
    thumb_name={fleet.fleet_commander_name}
    thumb_image={get_player_icon(fleet.fleet_commander_id, 512)}
    thumb_image_small={get_player_icon(fleet.fleet_commander_id, 512)}
    thumb_image_alt={fleet.fleet_commander_name}
    thumb_title={t('fleet_commander')}
    x-data={`{
        local_time: new Date('${eve_time} UTC').toLocaleDateString(
            '${lang}',
            ${import.meta.env.DATETIME_FORMAT}
        )
    }`}
    {...attributes}
>
    <VerticalCenter>
        <Flexblock gap="var(--space-s-m)">
            <TextGroup title={t('type')}>
                {t(fleet.type as any)}
            </TextGroup>
            <TextGroup title={t('location')}>
                {fleet.location}
            </TextGroup>
        </Flexblock>
    </VerticalCenter>
    
    <VerticalCenter>
        <Flexblock gap="var(--space-s-m)">
            <TextGroup title={t('eve_time')} class="[ sentence-cap ]">
                {eve_time_text}
            </TextGroup>
            <TextGroup title={t('local_time')} class="[ sentence-cap ]" x-text="local_time">
                <span class="[ loading ]">{t('calculating')}</span>
            </TextGroup>
        </Flexblock>
    </VerticalCenter>
    
    {!history &&
        <VerticalCenter>
            <Countdown date={countdown_time} id={`countdown-fleet-${fleet.id}`} />
        </VerticalCenter>
    }

    <VerticalCenter>
        <Button href={translatePath(`/fleets/${history ? 'history' : 'upcoming'}/${fleet.id}`)}>
            <MagnifierIcon slot="icon" />
            {t('view_details')}
        </Button>
    </VerticalCenter>
</ThumbCard>