---
import { getLangFromUrl, useTranslations, useTranslatedPath } from '@i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

import { is_prod_mode } from '@helpers/env'
import { HTTP_404_Not_Found } from '@helpers/http_responses'

import type { User } from '@dtypes/jwt'
import * as jose from 'jose'

const auth_token = Astro.cookies.has('auth_token') ? Astro.cookies.get('auth_token').value : false
const user:User | false = auth_token ? jose.decodeJwt(auth_token) as User : false

if (!auth_token || !user)
    return HTTP_404_Not_Found()

import type { MumbleInformation } from '@dtypes/api.minmatar.org'
import { get_mumble_connection } from '@helpers/api.minmatar.org/mumble'

let mumble_information:MumbleInformation
let get_mumble_connection_error:string | false = false

try {
    mumble_information = await get_mumble_connection(auth_token)
} catch (error) {
    get_mumble_connection_error = is_prod_mode() ? t('get_mumble_connection_error') : error.message
}

import MumbleConnectButton from '@components/blocks/MumbleConnectButton.astro';
import Button from '@components/blocks/Button.astro';
import Tippy from '@components/blocks/Tippy.astro';
---

{get_mumble_connection_error ?
    <MumbleConnectButton
        alert={{
            title: t('connect_to_mumble'),
            content: get_mumble_connection_error,
        }}
    />
    :
    <Tippy
        data-tippy-placement="top"
        partial={`${translatePath('/partials/normal_tooltip')}?description=mumble_launch_button_tooltip`}
        height='70px'
        width='340px'
        element='div'
        show_delay={2000}
        x-data={`{
            init() {
                window.open('${mumble_information.url}','_newtab');
            }
        }`}
    >
        <Button
            color='green'
            size='sm'
            type="button"
            href={mumble_information.url}
            target="_blank"
            rel="nofollow noopener noreferrer"
        >
            {t('launch_mumble')}
        </Button>
    </Tippy>
}