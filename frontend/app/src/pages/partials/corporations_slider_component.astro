---
import { getLangFromUrl, useTranslations } from '@i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

import { is_prod_mode } from '@helpers/env'

import type { User } from '@dtypes/jwt'
import * as jose from 'jose'

const auth_token = Astro.cookies.has('auth_token') ? Astro.cookies.get('auth_token').value : false
const user = auth_token ? jose.decodeJwt(auth_token) as User : false
const user_id = !user ? false : user.user_id

if (!auth_token || !user) {
    Astro.cookies.set('redirect_after_auth', Astro.url.href, { path: '/' })
    return Astro.redirect(get_auth_url())
}

import type { CorporationObject } from '@dtypes/layout_components'
import { get_corporations_for_corporations_list, get_user_corporation_id } from '@helpers/fetching/corporations'

let corporations:CorporationObject[] = []
let get_all_corporations_error:string | false = false
let user_corporation_id:number
try {
    user_corporation_id = (user_id ? await get_user_corporation_id(user_id) : null)
    corporations = await get_corporations_for_corporations_list(user_id, 'alliance')
} catch (error) {
    get_all_corporations_error = is_prod_mode() ? t('get_all_corporations_error') : error.message
}

import { get_app_url } from '@helpers/env'
const CORPORATIONS_SLIDER_PARTIAL_URL = `${get_app_url()}/partials/corporations_slider_component/`

const delay = parseInt(Astro.url.searchParams.get('delay'))

import CorporationsSlider from '@components/blocks/CorporationsSlider.astro';
import ErrorRefetch from '@components/blocks/ErrorRefetch.astro';
---

{get_all_corporations_error ?
    <CorporationsSlider corporations={[]}>
        <ErrorRefetch
            args={{
                partial: CORPORATIONS_SLIDER_PARTIAL_URL,
                message: get_all_corporations_error,
                delay: delay,
                target: '#corporations-list',
            }}
        />
    </CorporationsSlider>
    :
    <CorporationsSlider
        corporations={corporations}
        user_corporation_id={user_corporation_id}
    />
}