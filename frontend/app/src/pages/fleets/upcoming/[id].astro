---
import { getLangFromUrl, useTranslations, useTranslatedPath } from '@i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

import { is_prod_mode } from '@helpers/env'
import { HTTP_404_Not_Found } from '@helpers/http_responses'

import type { User } from '@dtypes/jwt'
import * as jose from 'jose'

const auth_token = Astro.cookies.has('auth_token') ? Astro.cookies.get('auth_token').value : false
const user:User | false = auth_token ? jose.decodeJwt(auth_token) as User : false

const user_is_superadmin = (auth_token && user ? user.is_superuser : false)

if (is_prod_mode() && !user_is_superadmin)
    return HTTP_404_Not_Found()

// TODO: Replace the static JSON below with the endpoint request using the id
const { id } = Astro.params
const fleet_id = parseInt(id)
console.log(`TODO: Fetch endpoint with id: ${fleet_id}`)
// Replace me ðŸ‘‡
import fleet from '@json/page/fleets/upcoming/fleet_201.json';

import Viewport from '@layouts/Viewport.astro';

import PageDefault from '@components/page/PageDefault.astro';
import PageTitle from '@components/page/PageTitle.astro';

import Flexblock from '@components/compositions/Flexblock.astro';
import FixedFluid from '@components/compositions/FixedFluid.astro';
import FlexInline from '@components/compositions/FlexInline.astro';

import FleetCompositionBlock from '@components/blocks/FleetCompositionBlock.astro';
import DoctrineItem from '@components/blocks/DoctrineItem.astro';
import ComponentBlock from '@components/blocks/ComponentBlock.astro';
import Button from '@components/blocks/Button.astro';
import VerticalCenter from '@components/blocks/VerticalCenter.astro';
import TextGroup from '@components/blocks/TextGroup.astro';

import AddIcon from '@components/icons/buttons/AddIcon.astro';
import FleetIcon from '@components/icons/buttons/FleetIcon.astro';


const page_title = `${t('fleet')} ${fleet.name}`;
---

<Viewport title={page_title}>
    <PageDefault
        cover={{
            image: "/images/fleets-cover.jpg",
            image_990: "/images/fleets-cover-990.jpg",
            alt: t('fleets.cover_alt'),
            animated: false,
            scrollable: true,
            overlay: true
        }}
    >
        <FlexInline slot="header" justification='space-between'>
            <FlexInline>
                <PageTitle>
                    {page_title}
                </PageTitle>
            </FlexInline>
            <FlexInline>
                <Button class="[ !hidden md:!flex ]" href={translatePath('/fleets/upcoming')}>
                    <FleetIcon slot="icon" />
                    {t('upcoming_fleets')}
                </Button>
                <Button color={'green'} class="[ !hidden lg:!flex ]" href={translatePath('/fleets/add')}>
                    <AddIcon slot="icon" />
                    {t('schedule_fleet')}
                </Button>
            </FlexInline>
        </FlexInline>

        <Flexblock gap="var(--space-3xs)">
            <ComponentBlock>
                <Flexblock class="[ w-full ]" gap='var(--space-m)'>
                    <h2>{t('fleet_information')}</h2>

                    <VerticalCenter>
                        <Flexblock gap='var(--space-3xs)' class="[ w-full ]">
                            <h4>{t('fleet_commander')}</h4>
                            <FixedFluid width='32px' gap='var(--space-3xs)' class="[ items-center ]">
                                <img loading="lazy" src={fleet.fleet_commander_portrait} width="32" height="32" />
                                <p>{fleet.fleet_commander_name}</p>
                            </FixedFluid>
                        </Flexblock>
                    </VerticalCenter>

                    <VerticalCenter>
                        <TextGroup title={t('tracking')} class:list={[ { loading: (fleet.tracking == t('forming')) } ]}>
                            {fleet.tracking}
                        </TextGroup>
                    </VerticalCenter>
                </Flexblock>
            </ComponentBlock>

            <ComponentBlock>
                <!--<DoctrineItem doctrine={fleet.doctrine} /> -->
            </ComponentBlock>

            <ComponentBlock
                x-data={`{
                    global_collapse: false,
                }`}
            >
                <FleetCompositionBlock composition={fleet.composition} fleet_id={fleet_id} />
            </ComponentBlock>  
        </Flexblock>
    </PageDefault>
</Viewport>