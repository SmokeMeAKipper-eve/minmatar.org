---
import { getLangFromUrl, useTranslations, useTranslatedPath } from '@i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

import { is_prod_mode } from '@helpers/env'
import { HTTP_404_Not_Found } from '@helpers/http_responses'

import type { User } from '@dtypes/jwt'
import * as jose from 'jose'

const user:User | false = Astro.cookies.has('auth_token') ? jose.decodeJwt(Astro.cookies.get('auth_token').value) as User : false

if (!user)
    return HTTP_404_Not_Found()

import { marked } from 'marked';

import Viewport from '@layouts/Viewport.astro';

import PageLanding from '@components/page/PageLanding.astro';

import Flexblock from '@components/compositions/Flexblock.astro';

import ButtonStack from '@components/blocks/ButtonStack.astro';
import Button from '@components/blocks/Button.astro';

import MagnifierIcon from '@components/icons/buttons/MagnifierIcon.astro';
import ArrowDown from '@components/icons/buttons/ArrowDown.astro';

const page_title = t('groups.page_title');
const page_description = t('groups.leading_text_p1');
---

<Viewport title={page_title} meta_description={page_description}>
    <PageLanding
        cover={{
            image: "/images/groups-cover.jpg",
            image_990: "/images/groups-cover-990.jpg",
            alt: t('groups.cover_alt'),
            overlay: true
        }}
    >
        <Flexblock gap='var(--space-2xl)'>
            <Flexblock>
                <h1>{page_title}</h1>
                <Flexblock gap='var(--space-s)'>
                    <p set:html={marked.parseInline(t('groups.leading_text_p1'))} />
                    <p set:html={marked.parseInline(t('groups.leading_text_p2'))} />
                </Flexblock>
            </Flexblock>
            
            <ButtonStack>
                <Button href={translatePath('/alliance/sigs/list/')}>
                    <MagnifierIcon slot="icon" />
                    {t('view_groups')}
                </Button>
                
                {!is_prod_mode() && (user.is_superuser || user?.permissions?.includes('auth.change_group')) &&
                    <Button href={translatePath('/alliance/sigs/requests/')}>
                        <ArrowDown slot="icon" />
                        {t('group_requests')}
                    </Button>
                }
            </ButtonStack>
        </Flexblock>
    </PageLanding>
</Viewport>