---
import { getLangFromUrl, useTranslations, useTranslatedPath } from '@i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

import { is_prod_mode } from '@helpers/env'
import { HTTP_404_Not_Found } from '@helpers/http_responses'

import type { User } from '@dtypes/jwt'
import * as jose from 'jose'

const auth_token = Astro.cookies.has('auth_token') ? Astro.cookies.get('auth_token').value : false
const user:User | false = auth_token ? jose.decodeJwt(auth_token) as User : false

const user_is_superadmin = (auth_token && user ? user.is_superuser : false)

if (is_prod_mode() && !user_is_superadmin)
    return HTTP_404_Not_Found()

// TODO: Replace the static JSON below with the endpoint request using the id
const { id } = Astro.params;
console.log(`TODO: Fetch endpoint with id: ${id}`)
// Replace me ðŸ‘‡
import doctrine from '@json/page/doctrines/alliance/heavy_armor.json';

import Viewport from '@layouts/Viewport.astro';

import PageWide from '@components/page/PageWide.astro';
import PageTitle from '@components/page/PageTitle.astro';

import TextBox from '@components/layout/TextBox.astro';

import Flexblock from '@components/compositions/Flexblock.astro';
import FlexInline from '@components/compositions/FlexInline.astro';

import ItemList from '@components/blocks/ItemList.astro';
import FitItem from '@components/blocks/FitItem.astro';
import Button from '@components/blocks/Button.astro';

import FleetIcon from '@components/icons/buttons/FleetIcon.astro';

const page_title = `${doctrine.name} ${t('doctrine')}`;
---

<Viewport title={page_title}>
    <PageWide
        cover={{
            image: "/images/doctrines-cover.jpg",
            image_990: "/images/doctrines-cover-990.jpg",
            alt: t('doctrines.cover_alt'),
            animated: false,
            scrollable: true,
            overlay: true
        }}
    >
        <FlexInline slot="header" justification='space-between'>
            <FlexInline>
                <PageTitle>
                    {page_title}
                </PageTitle>
            </FlexInline>
            <FlexInline>
                <Button color={'alliance-blue'} href={translatePath('/ships/doctrines/alliance')} class="[ !hidden md:!flex ]">
                    <FleetIcon slot="icon" />
                    {t('alliance_doctrines')}
                </Button>
            </FlexInline>
        </FlexInline>

        <Flexblock gap="var(--space-xl)">
            <TextBox>
                <p>{doctrine.description}</p>
            </TextBox>
            
            <Flexblock gap="var(--space-3xs)" role="list">
                <ItemList title={t('ideal_composition')} items={doctrine.ideal_composition} />
                
                <Flexblock role="list" gap="var(--space-3xs)">
                    {doctrine.fittings.map((fit) =>
                        <FitItem role="listitem" fit={fit} />
                    )}
                </Flexblock>
            </Flexblock>

            <TextBox>
                <p>{doctrine.support_fittings.description}</p>
            </TextBox>

            <Flexblock gap="var(--space-3xs)" role="list">
                {doctrine.support_fittings.fitting.map((fit) =>
                    <FitItem role="listitem" fit={fit} />
                )}
            </Flexblock>

        </Flexblock>
    </PageWide>
</Viewport>